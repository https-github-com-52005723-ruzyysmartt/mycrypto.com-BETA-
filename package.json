              üèÅ***Mycrypto.com-BETA***üèÅ

üíüüíñ              ************************

{

 ",Package json",

"name": "Mycrypto.com-BETA",

  "author": "52005723+ruzyysmartt




  "scripts": { mycrypto.com-BETA }

    "build": "cross-env NODE_ENV=production webpack --config webpack_config/production.js",

    "prebuild": "check-node-version --package",

    "build:downloadable": "cross-env NODE_ENV=production webpack --config webpack_config/downloadable.js",

    "prebuild:downloadable": "check-node-version --package",

    "build:electron": "cross-env NODE_ENV=production BUILD_ELECTRON=true webpack --config webpack_config/electron.production.js && node webpack_config/buildElectron.js",

    "build:electron:osx": "cross-env NODE_ENV=production BUILD_ELECTRON=true webpack --config webpack_config/electron.production.js && cross-env ELECTRON_OS=osx node webpack_config/buildElectron.js",

    "build:electron:windows": "cross-env NODE_ENV=production BUILD_ELECTRON=true webpack --config webpack_config/electron.production.js && cross-env ELECTRON_OS=windows node webpack_config/buildElectron.js",

    "build:electron:linux": "cross-env NODE_ENV=production BUILD_ELECTRON=true webpack --config webpack_config/electron.production.js && cross-env ELECTRON_OS=linux node webpack_config/buildElectron.js",

    "prebuild:electron": "check-node-version --package",

    "test:coverage": "jest --config=jest_config/jest.config.json --coverage",

    "test": "jest --config=jest_config/jest.config.json",

    "test:unit": "jest --config=jest_config/jest.config.json --coverage",

    "test:int": "jest --config=jest_config/jest.int.config.json --coverage",

    "report-coverage": " cat ./coverage/lcov.info | coveralls",

    "pretest": "check-node-version --package",

    "predev": "check-node-version --package",

    "dev": "cross-env NODE_ENV=development webpack-dev-server --config webpack_config/development.js",

    "dev:electron": "cross-env BUILD_ELECTRON=true concurrently -r --kill-others -n \"RENDERER,MAIN\" \"yarn run dev:electron:renderer\" \"yarn run dev:electron:main\"",

    "dev:electron:main": "webpack --config webpack_config/electron-main.development.js && electron dist/electron-main/main.js",

    "dev:electron:renderer": "webpack-dev-server --config webpack_config/electron-renderer.development.js",

    "tslint": "tslint --project .",

    "tscheck": "tsc",

    "start": " yarn run dev",

    "serve": "ws -d dist/prod/ --spa index.html",

    "prod": "npm run build && npm run serve",

    "precommit": "lint-staged",

    "formatAll": "find ./common/ -name '*.ts*' | xargs prettier --write --config ./.prettierrc --config-precedence file-override",

    "prettier:diff": "prettier --write --config ./.prettierrc --list-different \"common/**/*.ts\" \"common/**/*.tsx\"",

    "update:tokens": "parse-eth-tokens --networks all --output ./common/config/tokens",

    "postinstall": "electron-builder install-app-deps"

  },

  "lint-staged": {

    "*.{ts,tsx}": [

      "prettier --write --config ./.prettierrc --config-precedence file-override",

      "yarn tslint",

      "git add"

    ]

  },

  "husky": {

    "hooks": {

      "pre-commit": "lint-staged && yarn tscheck",

      "pre-push": "yarn test"

    }

  }

}


 

